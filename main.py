from unittest import result
import telebot
import sqlite3
from telebot import types

bot = telebot.TeleBot('TOKEN')

conn = sqlite3.connect('db.db', check_same_thread=False)
cursor = conn.cursor()

user_data= {
    'login': '',
    'password': '',
    'source': '',
    'other_source': '',
}

user_name = {
    'usr_name': ''
}

def db_table_val(login: str, password: str, source: str):
    cursor.execute('INSERT INTO log_pass (login, password, source) VALUES (?, ?, ?)', (login, password, source))
    conn.commit()


@bot.message_handler(commands='start')
def regisntration(message):

    usr_name = message.from_user.username

    cursor.execute(f'''CREATE TABLE IF NOT EXISTS {usr_name} (login STRING, password STRING, source STRING)''')
    conn.commit()

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–≤–æ–∏ –ø–∞—Ä–æ–ª–∏. –ö–æ–≥–¥–∞ —Ç—ã –Ω–∞–∂–∞–ª –Ω–∞ /start —è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Ç–µ–±—è.\n–¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –∑–∞–ø–∏—Å–∞—Ç—å —Ç–≤–æ–∏ –ø–∞—Ä–æ–ª–∏!")
    start_message(message)

@bot.message_handler(content_types='text')
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    add = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å')
    item1 = types.KeyboardButton('–í–ö')
    item2 = types.KeyboardButton('Google')
    item3 = types.KeyboardButton('Apple ID')
    item4 = types.KeyboardButton('–î—Ä—É–≥–∏–µ –ø–∞—Ä–æ–ª–∏')
    item5 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–æ–ª—å')
    

    markup.add(add, item1, item2, item3, item4, item5)
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –ø–∞—Ä–æ–ª—å —Ç–µ–±–µ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å?', reply_markup=markup)

    bot.register_next_step_handler(message, keyboard)
    
def keyboard(message):
    if message.text == '–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å':
        login_add(message)
    elif message.text == '–í–ö':
        vk_show_pass(message)
    elif message.text == 'Google':
        google_show_pass(message)
    elif message.text == 'Apple ID':
        apID_show_pass(message)
    elif message.text == '–î—Ä—É–≥–∏–µ –ø–∞—Ä–æ–ª–∏':
        other_show_pass(message)
    elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–æ–ª—å':
        delote_step0(message)

#–º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
def delote_step0(message):
    markup_3 = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1_3 = types.KeyboardButton('–í–ö')
    item2_3 = types.KeyboardButton('Google')
    item3_3 = types.KeyboardButton('Apple ID')
    item4_3 = types.KeyboardButton('–î—Ä—É–≥–æ–µ')

    markup_3.add(item1_3, item2_3, item3_3, item4_3)

    delite_1 = bot.send_message(message.chat.id, '–û—Ç—á–µ–≥–æ —É–¥–∞–ª–∏—Ç—å –ø–∞—Ä–æ–ª—å?', reply_markup=markup_3)
    bot.register_next_step_handler(delite_1, delite)
    
def delite(message):
    if message.text == '–î—Ä—É–≥–æ–µ':
        delite_other(message)
    else:
        user_name = message.from_user.username
        cursor.execute(f"SELECT * FROM {user_name}")
        # g–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        results = cursor.fetchall()
        login = message.text
        print(results)
        bot.send_message(message.chat.id, "–í–æ—Ç —Ç–≤–æ–∏ –ø–∞—Ä–æ–ª–∏:")
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
        for i in results:
            if login in i:
                msg_login =  (i[0])
                msg_pass = (i[1])
                bot.send_message(message.chat.id, 'login')
                bot.send_message(message.chat.id, msg_login)
                bot.send_message(message.chat.id, 'password')
                bot.send_message(message.chat.id, msg_pass)
                bot.send_message(message.chat.id, 'üîó'*9)
            else:
                print('Not found')
        
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ª–æ–≥–∏–Ω –æ—Ç –ø–∞—Ä—ã log|pass –∫–æ—Ç—Ä—É—é —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å:')
        bot.register_next_step_handler(msg, delite_step1)

def delite_step1(message):
    markup_3 = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1_3 = types.KeyboardButton('/start')


    markup_3.add(item1_3)

    bot.send_message(message.chat.id, '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É', reply_markup=markup_3)

    user_name = message.from_user.username
    cursor.execute(f"SELECT * FROM {user_name}")
    #–ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    results = cursor.fetchall()
    print(results)
    login = message.text
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    for i in results:
        if login in i:
            sql_update_query = f"""DELETE from {user_name} where login = ?"""
            cursor.execute(sql_update_query, (login, ))
            bot.send_message(message.chat.id, '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!')
                     
def google_show_pass(message):
    user_name = message.from_user.username
    cursor.execute(f"SELECT * FROM {user_name}")
    # g–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    results = cursor.fetchall()
    name = message.text
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    for i in results:
        if name in i:
            msg_login =  (i[0])
            msg_pass = (i[1])
            bot.send_message(message.chat.id, 'login')
            bot.send_message(message.chat.id, msg_login)
            bot.send_message(message.chat.id, 'password')
            bot.send_message(message.chat.id, msg_pass)
            bot.send_message(message.chat.id, 'üîó'*9)

        else:
            print('Not found')
    
    start_message(message)

def vk_show_pass(message):
    user_name = message.from_user.username
    cursor.execute(f"SELECT * FROM {user_name}")
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    results = cursor.fetchall()
    name = message.text
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    for i in results:
        if name in i:
            msg_login =  (i[0])
            msg_pass = (i[1])
            bot.send_message(message.chat.id, 'login')
            bot.send_message(message.chat.id, msg_login)
            bot.send_message(message.chat.id, 'password')
            bot.send_message(message.chat.id, msg_pass)
            bot.send_message(message.chat.id, 'üîó'*9)

        else:
            print('Not found')
    
    start_message(message)

def apID_show_pass(message):
    user_name = message.from_user.username
    cursor.execute(f"SELECT * FROM {user_name}")
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    results = cursor.fetchall()
    name = message.text
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    for i in results:
        if name in i:
            msg_login =  (i[0])
            msg_pass = (i[1])
            bot.send_message(message.chat.id, 'login')
            bot.send_message(message.chat.id, msg_login)
            bot.send_message(message.chat.id, 'password')
            bot.send_message(message.chat.id, msg_pass)
            bot.send_message(message.chat.id, 'üîó'*9)

        else:
            print('Not found')
    
    start_message(message)

def login_add(message):
    login = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ª–æ–≥–∏–Ω')
    bot.register_next_step_handler(login, password_add)
    
def password_add(message):
    user_data['login']=message.text
    password = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å')
    bot.register_next_step_handler(password, source_add)
    print(user_data['login'])

def source_add(message):
    user_data['password']=message.text
    print(user_data['password'])
    markup_2 = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1_1 = types.KeyboardButton('–í–ö')
    item2_2 = types.KeyboardButton('Google')
    item3_3 = types.KeyboardButton('Apple ID')
    item4_4 = types.KeyboardButton('–î—Ä—É–≥–∏–µ')

    markup_2.add(item1_1, item2_2, item3_3, item4_4)

    source = bot.send_message(message.chat.id, '–û—Ç—á–µ–≥–æ –ø–∞—Ä–æ–ª—å?', reply_markup=markup_2)


    bot.register_next_step_handler(source, add_db)

def add_db(message):
    if message.text == '–î—Ä—É–≥–∏–µ':
        other_add_table_pass(message)

    else:
        user_data['source']=message.text
        get_log_pass(message)
        print(user_data['source'])
        message = bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã')
        start_message(message)
    
def get_log_pass(message):
    user_name = message.from_user.username
    cursor.execute(f'insert into {user_name} values (?,?,?)', [user_data['login'], user_data['password'], user_data['source']])
    conn.commit()
    print('—á—ë—Ç –∏–∑–∏ –Ω–µ–≤—Å–ø–æ—Ç–µ–ª')
    
def text(message):
    bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –≤—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.')
    start_message(message)

def other_add_table_pass(message):
    usr_name = message.from_user.username
    #—Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–æ–ª–µ–π
    cursor.execute(f'''CREATE TABLE IF NOT EXISTS {usr_name+'_other_log_pass'} (login STRING, password STRING, source STRING, other_source STRING)''')
    
    print('–¢–∞–±–ª–∏—Ü–∞ –¥–ª—è "–î–†–£–ì–ò–•" —Å–æ–∑–¥–∞–Ω–∞')

    msg = bot.send_message(message.chat.id, '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–∞—Ä–æ–ª—é? (–ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç—á–µ–≥–æ –æ–Ω)')
    bot.register_next_step_handler(msg, other_add_pass)

def other_add_pass(message):
    user_data['source']=='√ìther'
    user_data['other_source']=message.text
    usr_name = message.from_user.username
    cursor.execute(f"insert into {usr_name+'_other_log_pass'} values (?,?,?,?)", [user_data['login'], user_data['password'], user_data['source'], user_data['other_source']])
    conn.commit()
    print('–î–æ–±–∞–≤–∏–ª –ø–∞—Ä–æ–ª—å –≤ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
    bot.send_message(message.chat.id, '–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.')
    start_message(message)

def other_show_pass(message):
    # g–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    usr_name = message.from_user.username
    cursor.execute(f"SELECT * FROM {usr_name+'_other_log_pass'}")
    conn.commit()
    results = cursor.fetchall()
    print(results)
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    for i in results:
        msg_login =  (i[0])
        msg_pass = (i[1])
        msg_comment = (i[3])
        bot.send_message(message.chat.id, '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–∞—Ä–æ–ª—é')
        bot.send_message(message.chat.id, msg_comment)
        bot.send_message(message.chat.id, 'login')
        bot.send_message(message.chat.id, msg_login)
        bot.send_message(message.chat.id, 'password')
        bot.send_message(message.chat.id, msg_pass)
        bot.send_message(message.chat.id, 'üîó'*9)

        
        print('Not found')
    
    start_message(message)

def delite_other(message):
    usr_name = message.from_user.username
    cursor.execute(f"SELECT * FROM {usr_name+'_other_log_pass'}")
    # g–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    results = cursor.fetchall()
    print(results)
    bot.send_message(message.chat.id, "–í–æ—Ç —Ç–≤–æ–∏ –ø–∞—Ä–æ–ª–∏:")
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    for i in results:
        msg_login_other =  (i[0])
        msg_pass_other = (i[1])
        msg_comment = (i[3])
        bot.send_message(message.chat.id, '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–∞—Ä–æ–ª—é')
        bot.send_message(message.chat.id, msg_comment)
        bot.send_message(message.chat.id, 'login')
        bot.send_message(message.chat.id, msg_login_other)
        bot.send_message(message.chat.id, 'password')
        bot.send_message(message.chat.id, msg_pass_other)
        bot.send_message(message.chat.id, 'üîó'*9)

    
    msg_2 = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ø–∞—Ä—ã log|pass –∏ —è —É–¥–∞–ª—é —ç—Ç—É –ø–∞—Ä—É:')
    bot.register_next_step_handler(msg_2, delite_step1_other)

def delite_step1_other(message):

    usr_name = message.from_user.username
    markup_5 = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1_5 = types.KeyboardButton('/start')

    markup_5.add(item1_5)

    bot.send_message(message.chat.id, '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É', reply_markup=markup_5)

    
    cursor.execute(f"SELECT * FROM {usr_name+'_other_log_pass'}")
    #–ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    results = cursor.fetchall()
    print(results)
    login = message.text
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    for i in results:
        if login in i:
            sql_update_query = f"""DELETE from {usr_name+'_other_log_pass'} where other_source = ?"""
            cursor.execute(sql_update_query, (login, ))
            bot.send_message(message.chat.id, '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!')
                     
bot.polling(none_stop=True)
